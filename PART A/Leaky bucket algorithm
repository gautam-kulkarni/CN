Step 1> Command 1 : gedit P6.c
Step 2> Copy the code and paste
Step 3> Command 2 : cc P6.c
Step 4> Command 3 : vi p6.c
Step 5> Command 4 : ./a.out
step 6> Check output as below

//Leaky bucket algorithm

#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#define NOF_PACKETS 10
int rand1(int a)
{
 int rn = (random() % 10) % a;
 return rn == 0 ? 1 : rn;
}
int main()
{
 int packet_sz[NOF_PACKETS], i, clk, b_size, o_rate, p_sz_rm=0, p_sz, p_time, op;
 for(i = 0; i<NOF_PACKETS; ++i)
 packet_sz[i] = rand1(6) * 10;
 for(i = 0; i<NOF_PACKETS; ++i)
 printf("\npacket[%d]:%d bytes\t", i, packet_sz[i]);
 printf("\nEnter the Output rate:");
 scanf("%d", &o_rate);
 printf("Enter the Bucket Size:");
 scanf("%d", &b_size);
 for(i = 0; i<NOF_PACKETS; ++i)
 {
 if( (packet_sz[i] + p_sz_rm) > b_size)
 if(packet_sz[i] > b_size)/*compare the packet siz with bucket size*/
 printf("\n\nIncoming packet size (%dbytes) is Greater than bucket capacity (%dbytes)-PACKET REJECTED", packet_sz[i], b_size);
 else
 printf("\n\nBucket capacity exceeded-PACKETS REJECTED!!");
 else
 {
 p_sz_rm += packet_sz[i];
 printf("\n\nIncoming Packet size: %d", packet_sz[i]);
 printf("\nBytes remaining to Transmit: %d", p_sz_rm);
 p_time = rand1(4) * 10;
 printf("\nTime left for transmission: %d units", p_time);
 for(clk = 10; clk <= p_time; clk += 10)
 {
 sleep(1);
 if(p_sz_rm)
 {
 if(p_sz_rm <= o_rate)
 op = p_sz_rm, p_sz_rm = 0;
 else
 op = o_rate, p_sz_rm -= o_rate;
 printf("\nPacket of size %d Transmitted", op);
 printf("----Bytes Remaining to Transmit: %d", p_sz_rm);
 }
 else
 {
 printf("\nTime left for transmission: %d units", p_time-clk);
 printf("\nNo packets to transmit!!");
 }
 }
 }
 }
}

//OUTPUT

packet[0]:30 bytes	
packet[1]:10 bytes	
packet[2]:10 bytes	
packet[3]:50 bytes	
packet[4]:30 bytes	
packet[5]:50 bytes	
packet[6]:10 bytes	
packet[7]:20 bytes	
packet[8]:30 bytes	
packet[9]:10 bytes	
Enter the Output rate:50
Enter the Bucket Size:10


Incoming packet size (30bytes) is Greater than bucket capacity (10bytes)-PACKET REJECTED

Incoming Packet size: 10
Bytes remaining to Transmit: 10
Time left for transmission: 20 units
Packet of size 10 Transmitted----Bytes Remaining to Transmit: 0
Time left for transmission: 0 units
No packets to transmit!!

Incoming Packet size: 10
Bytes remaining to Transmit: 10
Time left for transmission: 30 units
Packet of size 10 Transmitted----Bytes Remaining to Transmit: 0
Time left for transmission: 10 units
No packets to transmit!!
Time left for transmission: 0 units
No packets to transmit!!

Incoming packet size (50bytes) is Greater than bucket capacity (10bytes)-PACKET REJECTED

Incoming packet size (30bytes) is Greater than bucket capacity (10bytes)-PACKET REJECTED

Incoming packet size (50bytes) is Greater than bucket capacity (10bytes)-PACKET REJECTED

Incoming Packet size: 10
Bytes remaining to Transmit: 10
Time left for transmission: 10 units
Packet of size 10 Transmitted----Bytes Remaining to Transmit: 0

Incoming packet size (20bytes) is Greater than bucket capacity (10bytes)-PACKET REJECTED

Incoming packet size (30bytes) is Greater than bucket capacity (10bytes)-PACKET REJECTED

Incoming Packet size: 10
Bytes remaining to Transmit: 10
Time left for transmission: 10 units
Packet of size 10 Transmitted----Bytes Remaining to Transmit: 0
